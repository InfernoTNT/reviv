* Ciljevi

SUTRA:
https://www.youtube.com/watch?v=YbgH7yat-Jo

Vidi jel mozes nekako da default bude =Debug= mode (za vscode itd) a kad neko installira da mora da specify-uje =Release= mode.
Vidi da li se sve stavlja u dobar /build/bin/<release,debug>-linux/ fajl.
Glfw flags idk da li valja
Compiler flags, idealno u root cmake fajlu samo
Defines u reviv cmake fajlu

project todo:
  working out of source
  copy assets
  readme.org

For users: (proveri sve ofc)
 - cd build
 - cmake ../ -DCMAKE_BUILD_TYPE=Release
 - cmake --build .
  

todo:
 1. basic event
 2. use events for noclip first person camera controller
 3. merge to main/master branch

 1. model loading library load
 2. material->setTexture("uniformName", int)
 3. material clean
 4. proci kroz sve =TODO= komentare u kodu
 5. dodati warning flags, i fixovati ih
    - release i debug flags
    - omoguciti kompilaciju na windows 10 (visual studio)
 - package-uj program da radi za korisnike, asset folder da bude pored binary fajla
 - spojiti reviv i reviv2, build instruction

debug stuff ideje:
    - entity copy const., constructor, assignment operator
    - component copy const., constructor, assignment operator
    - napravi shallow copy za material, koristi ga na mestima gde vidis da se triger-uje breakpoint za copy construktor? i assignmnet operator.

project user build goal:
 - git clone...
 - make CMAKE_BUILD_TYPE=Release
 - sudo make install
    
project:
  - debug and release
  - binary output:
    ${solution-dir}/bin/${configuration}-${platform}/${project-name}/                | mozda ${solution-dir}/bin/${configuration}-${platform}/     (svi projekti na isto mesto) (isto i za intermediate binaries)
    ${solution-dir}/bin-int/${configuration}-${platform}/${project-name}/
    (mozda outputdir = "%{cfg.buildcfg}-%{cfg.system}-%{cfg.architecture}")

    build/sway/sway
    ogre:
        cmake --build . --config Release
        cmake --build . --config Release --target install
        build out of tree, manually

  - glfw
    1. disable documentation
    2. wayland
    3. proveriti da li se neki *testovi* kompajluju
  - compiler flags, warnings

- camera noclip flying controler (ubaciti u physics sistem)
- camera da pravi novi projection matrix svaki novi frame, zbog resize i tako to
- Material map da bude safe (?opratori, copy construtor?)

- physics i render engine:
    - timestep
    - user input

long term:
    - full scripting system
    - imgui, imguizmo.... full cherno style thing
    - layers
      
* Window, event, input

=Application= creates =window=, =window= does not know about =application=.

Window gives events to application:
 1. window gets event callback
 2. turn it into event and propagate to application

Application creates window

Event class contains info about the event. Ex. MouesBUttonPressEvent

Window has function pointer to the callback function in application 

Callback function : onEvent(const Event& event)

* Renderer
** mesh

Material sadrzi samo:
    - Shader
    - Shader data -> uniforms + textures
    - Flags:
    - two-sided
    - depth test
    - blending
    - etc...

Jedno potencijalno resenje za =light uniforme= je navodno "light manager" koji se pokrece unutar render loop-a.

squareMesh->setMaterial(material);

Konstrukcija shadera. Ovo *nije* nesto bitno, napravi ako ti je dosadno.
  - shader = Shader::Create("Ime_Shadera", const std::string& vetexSrc, const std::string& fragmentSrc);

* beleske
** Static
- static local variable:
   lifetime -> entire program
   scope -> limited to that scope

stvari koje cine static cini mi se:
 - inicijalizacija se radi samo jednom
 - program life time
 - local to that scope

** =delete =default
Stackoverflow odgovor: https://stackoverflow.com/a/6502854

** const

Zavsisi sa koje /strane/ =*= je =const=.

- =int const* A= $\equiv$ =const int* A=   -> ne mozes menjati A, mozes menjati gde pokazuje pointer

- =int * const a=                    -> mozes menjati A, ne mozes menjati gde pokazuje pointer

- =const= na kraju imena =metode= garantuje da metoda nece menjati clanove klase.
#+begin_src cpp
  class A{

    int b;
    int radi() const
    {
      cout << b;
    }

  };
#+end_src

** shader
- Finding uniform location does note require you to use the shader program first.

- Updating a uniform *does* require you to /first/ use the program. (da li moze update posle prvog koriscenja iako nije trentuno in-use???)
** pointers
Cherno kaze: On /licno/ koristi ili =shared pointer= ili =raw pointer=. U praksi ne koristi =unique pointer= jer se oni koriste kada je bitna performansa, a tada /might as well use raw/.
https://www.youtube.com/watch?v=HkGZ378nArE
https://www.youtube.com/watch?v=sLlGEUO_EGE
Comment your .h files
** resursi (knjige, artikli itd)

Three optimizatoin tips for c++ (preporuka od game engine book): https://www.slideshare.net/andreialexandrescu1/
- game dev -> left handed coordinate system

gang of four - design patterns of OOP (game engine book prepourka)
** order of class members

moje licno:
    1. public
    2. private

    1. typedefs adn enums
    2. constants
    3. constructor
    4. destructor
    5. static methods
    6. methods
    7. static data member
    8. data member

* Ecs stuff
** entt api

- entt::entity entity = m_Registry.create(); //m_Registry $\approx$ scene, entt::entity = uint32_t

- m_Registry.emplace<TransformComponent>(entity); (RADI RETURN)
- m_Registry.emplace<TransformComponent>(entity, construstor_arguments); //https://www.youtube.com/watch?v=D4hz0wEB978&t=1304s @22:00

napravi =entity.add<TransformComponent>(constructor_args);= ili =EntityManager::add<TransformComponent>(entity, constructor_args)= (drugi je mozda komplikovan)

- m_Registry.remove<TransformComponent>(entity)

- m_Registry.clear()

- m_Registry.get<TransformComponent>(entity)

- if(m_Registry.has<TransformComponent>(entity))

TransformComponent& transform = m_Registry.emplace<TransformComponent>(entity, constructor_args); // *brutalno*
auto& transform = m_Registry.emplace<TransformComponent>(entity, constructor_args); // *brutalno*

Radi funkciju /onTransformConstruct/ na svakoj konstrukciji transforma.
    m_Registry.on_construct<TransformComponent>().connect<&onTransformConstruct>();
    m_Registry.on_destruct...
    m_Registry.on_destroy...
    m_Registry.on_update...
    m_Registry.on_replace...
            static void onTransformConstruct(entt:registry& registry, entt:entity entity);
   

*** Prolazenje/iteracija:

auto view = m_Registry.view<TransformComponent>();
for (auto entity: view)
{
    auto& TransformComponent = m_Registry.get<TransformComponent>(entity);
}

*iteracija kroz grupe*:
auto group = m_Registry.group<TransformComponent>(entt:get<MeshComponent>);
for (auto entity : group)
{
    auto&[transform, mesh] = group.get<TransformComponent, MeshComponent>(entity); // *C++ 17*
}

** cherno api

bool entity.hasComponent<TransformComponent>();

auto& squareColor = m_SquareEntity.GetComponent<SpriteRendererComponent>().Color; *RETURN TYPE Je T**

** 
za basic ecs (malkice bolja verzija mozda ovog mog, ili bar malo vise citka mozda): https://stackoverflow.com/questions/17058701/member-function-called-only-on-initialization-of-first-instance-of-a-class-c

https://github.com/SanderMertens/ecs-faq

*nemoj ga praviti*

- Najvrv da svaki =entity= moze da ima po jedan od svakog =component=, tako i profesionalni ecs radi.

- Svaki entity ima svoj ID.

- U listi komponenti, svaka komponenta ima svoj ID. Onda ces moci dobiti sve ostale informacije vezane za taj entity ID.

- U listi komponenti, svaka komponenta ima svoj =bool= koji oznacava da li da je sistem /ignorise/ (tojest da li je "obrisana") ili da je sistem koristi (renderuje/physics-uje itd...)

Proveravanje da li ima bilo koji broj komponenti u O(1):
    - Da bi proverio da li neki entity ima recimo: transform i mesh, radim preko *bit-flagova* i bit operaciaj, kazem entity.has(TRANSFORM_COMPONENT_FLAG & MESH_COMPONENT_FLAG)
Uzimanje pointer od komponente u O(1):
    - Samo /store-uj/ pointere ka svim komponentama.
-----

kompnente:

template T -> id komponente tipa T (idk) -> return pointer tipa T

* Optimizacija

Cach-iranje pozicija uniform-ova u shader-u pri kompajlovanju

Koristiti std::array umesto std::vector, zbog heap allocation shita - kaze Cherno. Ili napraviti svoju implementaciju vektora ili array-a

Za voxel based:
 - frustum culling
 - occlusion culling
 - rendering only visible faces
 - several articles and videos about it, heck there is even an stb library
 - ?sean's toolbox?

Batched rendering.

Instanced rendering.

SIMD operations.

Provertiti da li se mozda zovu neki construktori i desktruktori koji ne bi trebali (ne bi trebali skoro nijedan).

???? culling? Ne znam koja reci ide umesto "????".

staiviti inline na mesta gde funkcija samo return-uje.

* Long term ideje

camera.renderTarget(Entity)  ->  track-uje neki entity

class SpecificComponent : public Component
 static getName()
 static std::string name;

Svaki Component da ima svoj (ne virtualan) id.

In order to render a skeletal mesh, the game engine requires three distinct kinds of data:
1. the mesh itself,
2. the skeletal hierarchy (joint names, parent-child relationships and the
base pose the skeleton was in when it was originally bound to the mesh),
and
58 1. Introduction
3. one or more animation clips, which specify how the joints should move
over time.

* Resursi
https://antongerdelan.net/opengl/
https://open.gl/











































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































