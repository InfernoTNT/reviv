* Ciljevi

order: input->update->display

sutra:
    - textures and stuff on backpack and textures in general
    - /ne/ jos environment apstraction (skroz)
    - normals transformation
    - quaternion?

smoother mouse:
 - manji sensitivity
 - double for position?
 - pogledaj kako racunas mozda moze bolje da se preser-vuje

shallow work:
 - dll assimp

math:
 - normals move: http://www.lighthouse3d.com/tutorials/glsl-12-tutorial/the-normal-matrix/
 - quaterinions

procitaj: https://learnopengl.com/In-Practice/Debugging

clean:
 - git "merge" with main, reviv1
 - gitlc? models
 - .dll za assimp?
 - asset manager, bolje dodavanje shadera, materiala, meshova, transforma...
 - assets copy: u debug: assets kao parametar, u release: kopiraj u cmake
 - environment stuff?

texture, i backpack sa njima
distance lighting
pretty shaders
textures in materials
skybox
zfightings probaj sam pa onda(http://www.songho.ca/opengl/gl_projectionmatrix.html)
scale i normalizacija

vscode:
 - disable (or set low-prio) searching on files from vendor

crash:
 - glfw crash thing
 - windows 10 not working
 - player becomes nan

long term:
    - full scripting system
    - imgui, imguizmo.... full cherno style thing
    - layers

organizacija:
 - m_thing, m_Thing, pThing
 - iteratori kako valja
 - const * gde treba
 - red include-ova (ima na stack overflow)
      
* Window, event, input

=Application= creates =window=, =window= does not know about =application=.

Window gives events to application:
 1. window gets event callback
 2. turn it into event and propagate to application

Application creates window

Event class contains info about the event. Ex. MouesBUttonPressEvent

Window has function pointer to the callback function in application 

Callback function : onEvent(const Event& event)

* Renderer
** Shader, light, environment

Entity-ji imaju light component. ?Dalje se sami namestaju shader-i u begin scene? a mozda i u material.configEnvironemnt(environment& environment)

submit:
 entity.meterial.bind();
 entity.environment.bind();
 entity.vao.bind();
 drawElements()


** Model

class Model
{
Loader* loader;
std::vector<Material*> pMaterials;
std::vector<Mesh*> pMeshes;
}

Material:
 Shader*
 unordered_map

custom code?: pMaterial[i].map["u_diffuseSpecular"]=loader->getMaterial(i, ....) (vidi learnopengl.com/.../model -> Material(chapter)

** mesh

** vao

Vao poseduje:
 - vbo
 - ebo
 - vbo layout

Mozes imati vise buffer-a po jednom vao, ali se to retko radi

https://learnopengl.com: A single mesh is the minimal representation of what we need to draw an object in OpenGL (vertex data, indices, and material properties). A model (usually) consists of several meshes.



Material sadrzi samo:
    - Shader
    - Shader data -> uniforms + textures
    - Flags:
    - two-sided
    - depth test
    - blending
    - etc...

Jedno potencijalno resenje za =light uniforme= je navodno "light manager" koji se pokrece unutar render loop-a.

squareMesh->setMaterial(material);

Konstrukcija shadera. Ovo *nije* nesto bitno, napravi ako ti je dosadno.
  - shader = Shader::Create("Ime_Shadera", const std::string& vetexSrc, const std::string& fragmentSrc);

* beleske
** Static
- static local variable:
   lifetime -> entire program
   scope -> limited to that scope

stvari koje cine static cini mi se:
 - inicijalizacija se radi samo jednom
 - program life time
 - local to that scope

** =delete =default
Stackoverflow odgovor: https://stackoverflow.com/a/6502854

** const

Zavsisi sa koje /strane/ =*= je =const=.

- =int const* A= $\equiv$ =const int* A=   -> ne mozes menjati A, mozes menjati gde pokazuje pointer

- =int * const a=                    -> mozes menjati A, ne mozes menjati gde pokazuje pointer

- =const= na kraju imena =metode= garantuje da metoda nece menjati clanove klase.
#+begin_src cpp
  class A{

    int b;
    int radi() const
    {
      cout << b;
    }

  };
#+end_src

** shader
- Finding uniform location does note require you to use the shader program first.

- Updating a uniform *does* require you to /first/ use the program. (da li moze update posle prvog koriscenja iako nije trentuno in-use???)
** pointers
Cherno kaze: On /licno/ koristi ili =shared pointer= ili =raw pointer=. U praksi ne koristi =unique pointer= jer se oni koriste kada je bitna performansa, a tada /might as well use raw/.
https://www.youtube.com/watch?v=HkGZ378nArE
https://www.youtube.com/watch?v=sLlGEUO_EGE
Comment your .h files
** resursi (knjige, artikli itd)

Three optimizatoin tips for c++ (preporuka od game engine book): https://www.slideshare.net/andreialexandrescu1/
- game dev -> left handed coordinate system

gang of four - design patterns of OOP (game engine book prepourka)
** order of class members

moje licno:
    1. public
    2. private

    1. typedefs adn enums
    2. constants
    3. constructor
    4. destructor
    5. static methods
    6. methods
    7. static data member
    8. data member

* Ecs stuff
** entt api

- entt::entity entity = m_Registry.create(); //m_Registry $\approx$ scene, entt::entity = uint32_t

- m_Registry.emplace<TransformComponent>(entity); (RADI RETURN)
- m_Registry.emplace<TransformComponent>(entity, construstor_arguments); //https://www.youtube.com/watch?v=D4hz0wEB978&t=1304s @22:00

napravi =entity.add<TransformComponent>(constructor_args);= ili =EntityManager::add<TransformComponent>(entity, constructor_args)= (drugi je mozda komplikovan)

- m_Registry.remove<TransformComponent>(entity)

- m_Registry.clear()

- m_Registry.get<TransformComponent>(entity)

- if(m_Registry.has<TransformComponent>(entity))

TransformComponent& transform = m_Registry.emplace<TransformComponent>(entity, constructor_args); // *brutalno*
auto& transform = m_Registry.emplace<TransformComponent>(entity, constructor_args); // *brutalno*

Radi funkciju /onTransformConstruct/ na svakoj konstrukciji transforma.
    m_Registry.on_construct<TransformComponent>().connect<&onTransformConstruct>();
    m_Registry.on_destruct...
    m_Registry.on_destroy...
    m_Registry.on_update...
    m_Registry.on_replace...
            static void onTransformConstruct(entt:registry& registry, entt:entity entity);
   

*** Prolazenje/iteracija:

auto view = m_Registry.view<TransformComponent>();
for (auto entity: view)
{
    auto& TransformComponent = m_Registry.get<TransformComponent>(entity);
}

*iteracija kroz grupe*:
auto group = m_Registry.group<TransformComponent>(entt:get<MeshComponent>);
for (auto entity : group)
{
    auto&[transform, mesh] = group.get<TransformComponent, MeshComponent>(entity); // *C++ 17*
}

** cherno api

bool entity.hasComponent<TransformComponent>();

auto& squareColor = m_SquareEntity.GetComponent<SpriteRendererComponent>().Color; *RETURN TYPE Je T**

** 
za basic ecs (malkice bolja verzija mozda ovog mog, ili bar malo vise citka mozda): https://stackoverflow.com/questions/17058701/member-function-called-only-on-initialization-of-first-instance-of-a-class-c

https://github.com/SanderMertens/ecs-faq

*nemoj ga praviti*

- Najvrv da svaki =entity= moze da ima po jedan od svakog =component=, tako i profesionalni ecs radi.

- Svaki entity ima svoj ID.

- U listi komponenti, svaka komponenta ima svoj ID. Onda ces moci dobiti sve ostale informacije vezane za taj entity ID.

- U listi komponenti, svaka komponenta ima svoj =bool= koji oznacava da li da je sistem /ignorise/ (tojest da li je "obrisana") ili da je sistem koristi (renderuje/physics-uje itd...)

Proveravanje da li ima bilo koji broj komponenti u O(1):
    - Da bi proverio da li neki entity ima recimo: transform i mesh, radim preko *bit-flagova* i bit operaciaj, kazem entity.has(TRANSFORM_COMPONENT_FLAG & MESH_COMPONENT_FLAG)
Uzimanje pointer od komponente u O(1):
    - Samo /store-uj/ pointere ka svim komponentama.
-----

kompnente:

template T -> id komponente tipa T (idk) -> return pointer tipa T

* Refactor cummulation ideas

Staviti mnoge member funckcije da su =const= i da return-uju =const *=

thing -> m_Thing (ili mThing ili m_thing??) (vrv m_Thing)

transform -> cherno like transform

* Optimizacija

inline a lot of shit

Cach-iranje pozicija uniform-ova u shader-u pri kompajlovanju

Koristiti std::array umesto std::vector, zbog heap allocation shita - kaze Cherno. Ili napraviti svoju implementaciju vektora ili array-a

Za voxel based:
 - frustum culling
 - occlusion culling
 - rendering only visible faces
 - several articles and videos about it, heck there is even an stb library
 - ?sean's toolbox?

Batched rendering.

Instanced rendering.

SIMD operations.

Provertiti da li se mozda zovu neki construktori i desktruktori koji ne bi trebali (ne bi trebali skoro nijedan).

???? culling? Ne znam koja reci ide umesto "????".

staiviti inline na mesta gde funkcija samo return-uje.

* Long term ideje

camera.renderTarget(Entity)  ->  track-uje neki entity

class SpecificComponent : public Component
 static getName()
 static std::string name;

Svaki Component da ima svoj (ne virtualan) id.

In order to render a skeletal mesh, the game engine requires three distinct kinds of data:
1. the mesh itself,
2. the skeletal hierarchy (joint names, parent-child relationships and the
base pose the skeleton was in when it was originally bound to the mesh),
and
58 1. Introduction
3. one or more animation clips, which specify how the joints should move
over time.

* Resursi
https://antongerdelan.net/opengl/
https://open.gl/











































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































